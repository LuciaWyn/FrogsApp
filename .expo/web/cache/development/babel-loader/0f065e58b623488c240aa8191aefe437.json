{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport frogs from \"../data/frogs.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Species() {\n  var frogData = frogs();\n\n  var select = function select(item) {\n    console.log(item);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [frogData.map(function (frog) {\n      return _jsx(View, {\n        children: _jsx(Text, {\n          style: styles.item,\n          children: frog.name\n        })\n      });\n    }), _jsx(FlatList, {\n      numColumns: 2,\n      horizontal: false,\n      columnWrapperStyle: {\n        flex: 1,\n        justifyContent: \"space-around\"\n      },\n      data: frogData,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item,\n            index = _ref.index,\n            separators = _ref.separators;\n        return _jsxs(TouchableOpacity, {\n          style: styles.frogs,\n          onPress: function onPress() {\n            return select(item.id);\n          },\n          children: [_jsx(Image, {\n            style: styles.frogImage,\n            source: item.image\n          }), _jsx(Text, {\n            children: item.name\n          })]\n        }, item.id);\n      }\n    })]\n  });\n}\n\nexport default Species;\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    width: '100%'\n  },\n  frogImage: {\n    width: '100%',\n    height: 100\n  },\n  frogs: {\n    height: 200,\n    padding: 5,\n    margin: 5,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["frogs","Species","frogData","select","item","console","log","styles","container","map","frog","name","flex","justifyContent","index","separators","id","frogImage","image","StyleSheet","create","flexDirection","width","height","padding","margin","alignItems"],"sources":["F:/React-Native-Apps/Frogs-App/pages/Species.js"],"sourcesContent":["import {View, TouchableOpacity, Image, StyleSheet, FlatList,Text} from 'react-native'\r\nimport frogs from '../data/frogs.js';\r\n\r\nfunction Species(){\r\n    const frogData = frogs();\r\n    const select = (item) =>{console.log(item)};\r\n    return(\r\n        <View style={styles.container}>\r\n            {frogData.map((frog) => {\r\n                return (\r\n                <View>\r\n                    <Text style={styles.item}>{frog.name}</Text>\r\n                </View>\r\n                );\r\n            })}\r\n            <FlatList\r\n                numColumns={2}\r\n                horizontal={false}\r\n                columnWrapperStyle={{ flex: 1, justifyContent: \"space-around\" }}\r\n                data={frogData} \r\n                    renderItem={({ item, index, separators }) => (\r\n                    <TouchableOpacity style={styles.frogs} key={item.id} onPress={()=>select(item.id)}>\r\n                        <Image style={styles.frogImage} source={item.image} />\r\n                        <Text>{item.name}</Text>\r\n                    </TouchableOpacity>\r\n                    )}\r\n                />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Species;\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flexDirection: 'column',\r\n        width: '100%'\r\n    },\r\n    frogImage:{\r\n        width: '100%',\r\n        height: 100\r\n    },\r\n    frogs:{\r\n        height: 200,\r\n        padding: 5,\r\n        margin: 5,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n});"],"mappings":";;;;;;AACA,OAAOA,KAAP;;;;AAEA,SAASC,OAAT,GAAkB;EACd,IAAMC,QAAQ,GAAGF,KAAK,EAAtB;;EACA,IAAMG,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAS;IAACC,OAAO,CAACC,GAAR,CAAYF,IAAZ;EAAkB,CAA3C;;EACA,OACI,MAAC,IAAD;IAAM,KAAK,EAAEG,MAAM,CAACC,SAApB;IAAA,WACKN,QAAQ,CAACO,GAAT,CAAa,UAACC,IAAD,EAAU;MACpB,OACA,KAAC,IAAD;QAAA,UACI,KAAC,IAAD;UAAM,KAAK,EAAEH,MAAM,CAACH,IAApB;UAAA,UAA2BM,IAAI,CAACC;QAAhC;MADJ,EADA;IAKH,CANA,CADL,EAQI,KAAC,QAAD;MACI,UAAU,EAAE,CADhB;MAEI,UAAU,EAAE,KAFhB;MAGI,kBAAkB,EAAE;QAAEC,IAAI,EAAE,CAAR;QAAWC,cAAc,EAAE;MAA3B,CAHxB;MAII,IAAI,EAAEX,QAJV;MAKQ,UAAU,EAAE;QAAA,IAAGE,IAAH,QAAGA,IAAH;QAAA,IAASU,KAAT,QAASA,KAAT;QAAA,IAAgBC,UAAhB,QAAgBA,UAAhB;QAAA,OACZ,MAAC,gBAAD;UAAkB,KAAK,EAAER,MAAM,CAACP,KAAhC;UAAqD,OAAO,EAAE;YAAA,OAAIG,MAAM,CAACC,IAAI,CAACY,EAAN,CAAV;UAAA,CAA9D;UAAA,WACI,KAAC,KAAD;YAAO,KAAK,EAAET,MAAM,CAACU,SAArB;YAAgC,MAAM,EAAEb,IAAI,CAACc;UAA7C,EADJ,EAEI,KAAC,IAAD;YAAA,UAAOd,IAAI,CAACO;UAAZ,EAFJ;QAAA,GAA4CP,IAAI,CAACY,EAAjD,CADY;MAAA;IALpB,EARJ;EAAA,EADJ;AAuBH;;AAED,eAAef,OAAf;AAEA,IAAMM,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;EAC7BZ,SAAS,EAAC;IACNa,aAAa,EAAE,QADT;IAENC,KAAK,EAAE;EAFD,CADmB;EAK7BL,SAAS,EAAC;IACNK,KAAK,EAAE,MADD;IAENC,MAAM,EAAE;EAFF,CALmB;EAS7BvB,KAAK,EAAC;IACFuB,MAAM,EAAE,GADN;IAEFC,OAAO,EAAE,CAFP;IAGFC,MAAM,EAAE,CAHN;IAIFZ,cAAc,EAAE,QAJd;IAKFa,UAAU,EAAE;EALV;AATuB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}
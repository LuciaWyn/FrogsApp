{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FrogItem from \"../componets/frogItem\";\nimport frogs from \"../data/frogs.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Home() {\n  var frogData = frogs();\n  var Separator = '|';\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      children: [\"Scientify Name: \", _jsx(Text, {\n        style: styles.science,\n        children: \"Anura\"\n      })]\n    }), _jsx(View, {\n      style: styles.frogContainer,\n      children: _jsx(FlatList, {\n        horizontal: true,\n        data: frogData,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item,\n              index = _ref.index,\n              separators = _ref.separators;\n          return _jsxs(View, {\n            style: styles.frogs,\n            children: [_jsx(Image, {\n              style: styles.frogImage,\n              source: item.image\n            }), _jsx(Text, {\n              style: styles.frogText,\n              children: item.name\n            })]\n          }, item.id);\n        }\n      })\n    })]\n  });\n}\n\nexport default Home;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    color: 'black',\n    justifyContent: 'flex-start',\n    flexDirection: 'column',\n    textAlign: 'center',\n    width: '100%',\n    alignItems: 'center'\n  },\n  science: {\n    fontStyle: 'italic'\n  },\n  frogContainer: {\n    borderTopColor: 'darkred',\n    borderBottomColor: 'darkred',\n    borderTopWidth: 3,\n    borderBottomWidth: 3,\n    height: 250\n  },\n  frogs: {\n    height: 200,\n    padding: 5,\n    margin: 5,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  frogImage: {\n    width: \"auto\",\n    height: 150\n  },\n  frogText: {\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["FrogItem","frogs","Home","frogData","Separator","styles","container","science","frogContainer","item","index","separators","frogImage","image","frogText","name","id","StyleSheet","create","flex","backgroundColor","color","justifyContent","flexDirection","textAlign","width","alignItems","fontStyle","borderTopColor","borderBottomColor","borderTopWidth","borderBottomWidth","height","padding","margin"],"sources":["F:/React-Native-Apps/Frogs-App/pages/Home.js"],"sourcesContent":["import { StyleSheet, Text, View, FlatList, Image,ScrollView } from 'react-native';\r\nimport FrogItem from '../componets/frogItem';\r\n//var frogs = require('../data/frogsData.json');\r\nimport frogs from '../data/frogs.js';\r\n\r\n\r\n\r\nfunction Home(){\r\n    const frogData = frogs();\r\n    const Separator = '|';\r\n    return(\r\n        <View style={styles.container}>\r\n            <Text>Scientify Name: <Text style={styles.science}>Anura</Text></Text>\r\n            <View style={styles.frogContainer}>\r\n                <FlatList horizontal={true} \r\n                data={frogData} \r\n                    renderItem={({ item, index, separators }) => (\r\n                    <View key={item.id} style={styles.frogs}>   \r\n                        <Image style={styles.frogImage} source={item.image}/>    \r\n                        <Text style={styles.frogText}>{item.name}</Text>\r\n                    </View>\r\n                    )}\r\n                />\r\n            </View>\r\n            \r\n        </View>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n\r\nconst styles =  StyleSheet.create({\r\n    container:{\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n        color: 'black',\r\n        justifyContent: 'flex-start',\r\n        flexDirection: 'column',\r\n        textAlign: 'center',\r\n        width: '100%',\r\n        alignItems: 'center',\r\n    },\r\n    science:{\r\n        fontStyle: 'italic'\r\n    },\r\n    frogContainer:{\r\n        borderTopColor: 'darkred',\r\n        borderBottomColor: 'darkred',\r\n        borderTopWidth: 3,\r\n        borderBottomWidth: 3,\r\n        height: 250,\r\n    },\r\n    frogs:{\r\n        height: 200,\r\n        padding: 5,\r\n        margin: 5,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    frogImage:{\r\n        width: \"auto\",\r\n        height: 150\r\n    },\r\n    frogText:{\r\n        textAlign: 'center'\r\n    }\r\n});"],"mappings":";;;;;;AACA,OAAOA,QAAP;AAEA,OAAOC,KAAP;;;;AAIA,SAASC,IAAT,GAAe;EACX,IAAMC,QAAQ,GAAGF,KAAK,EAAtB;EACA,IAAMG,SAAS,GAAG,GAAlB;EACA,OACI,MAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;IAAA,WACI,MAAC,IAAD;MAAA,+BAAsB,KAAC,IAAD;QAAM,KAAK,EAAED,MAAM,CAACE,OAApB;QAAA;MAAA,EAAtB;IAAA,EADJ,EAEI,KAAC,IAAD;MAAM,KAAK,EAAEF,MAAM,CAACG,aAApB;MAAA,UACI,KAAC,QAAD;QAAU,UAAU,EAAE,IAAtB;QACA,IAAI,EAAEL,QADN;QAEI,UAAU,EAAE;UAAA,IAAGM,IAAH,QAAGA,IAAH;UAAA,IAASC,KAAT,QAASA,KAAT;UAAA,IAAgBC,UAAhB,QAAgBA,UAAhB;UAAA,OACZ,MAAC,IAAD;YAAoB,KAAK,EAAEN,MAAM,CAACJ,KAAlC;YAAA,WACI,KAAC,KAAD;cAAO,KAAK,EAAEI,MAAM,CAACO,SAArB;cAAgC,MAAM,EAAEH,IAAI,CAACI;YAA7C,EADJ,EAEI,KAAC,IAAD;cAAM,KAAK,EAAER,MAAM,CAACS,QAApB;cAAA,UAA+BL,IAAI,CAACM;YAApC,EAFJ;UAAA,GAAWN,IAAI,CAACO,EAAhB,CADY;QAAA;MAFhB;IADJ,EAFJ;EAAA,EADJ;AAiBH;;AAED,eAAed,IAAf;AAEA,IAAMG,MAAM,GAAIY,UAAU,CAACC,MAAX,CAAkB;EAC9BZ,SAAS,EAAC;IACNa,IAAI,EAAE,CADA;IAENC,eAAe,EAAE,OAFX;IAGNC,KAAK,EAAE,OAHD;IAINC,cAAc,EAAE,YAJV;IAKNC,aAAa,EAAE,QALT;IAMNC,SAAS,EAAE,QANL;IAONC,KAAK,EAAE,MAPD;IAQNC,UAAU,EAAE;EARN,CADoB;EAW9BnB,OAAO,EAAC;IACJoB,SAAS,EAAE;EADP,CAXsB;EAc9BnB,aAAa,EAAC;IACVoB,cAAc,EAAE,SADN;IAEVC,iBAAiB,EAAE,SAFT;IAGVC,cAAc,EAAE,CAHN;IAIVC,iBAAiB,EAAE,CAJT;IAKVC,MAAM,EAAE;EALE,CAdgB;EAqB9B/B,KAAK,EAAC;IACF+B,MAAM,EAAE,GADN;IAEFC,OAAO,EAAE,CAFP;IAGFC,MAAM,EAAE,CAHN;IAIFZ,cAAc,EAAE,QAJd;IAKFI,UAAU,EAAE;EALV,CArBwB;EA4B9Bd,SAAS,EAAC;IACNa,KAAK,EAAE,MADD;IAENO,MAAM,EAAE;EAFF,CA5BoB;EAgC9BlB,QAAQ,EAAC;IACLU,SAAS,EAAE;EADN;AAhCqB,CAAlB,CAAhB"},"metadata":{},"sourceType":"module"}